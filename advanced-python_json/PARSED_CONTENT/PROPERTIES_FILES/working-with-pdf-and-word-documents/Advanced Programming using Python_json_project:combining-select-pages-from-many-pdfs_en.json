{
	"project:combining-select-pages-from-many-pdfs_key1": "Project: Combining Select Pages from Many PDFs",
	"project:combining-select-pages-from-many-pdfs_key2": "Say you have the boring job of merging several dozen PDF documents into a single PDF <span style=\"\">file</span>. Each of them has a cover sheet as the first page, but you don’t want the cover sheet repeated in the final result. Even though there are lots of free programs for combining PDFs, many of them simply merge entire <span style=\"\">files</span> together. Let’s write a <span style=\"\">Python</span> program to customize which pages you want in the combined PDF.",
	"project:combining-select-pages-from-many-pdfs_key3": "At a high level, here’s what the program will do:",
	"project:combining-select-pages-from-many-pdfs_key4": "Find all PDF <span style=\"\">files</span> in the current working directory.",
	"project:combining-select-pages-from-many-pdfs_key5": "Sort the <span style=\"\">file</span>names so the PDFs are added in order.",
	"project:combining-select-pages-from-many-pdfs_key6": "Write each page, excluding the first page, of each PDF to the <span style=\"\">output</span> <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key7": "In terms of implementation, your <span style=\"\">code</span> will need to do the following:",
	"project:combining-select-pages-from-many-pdfs_key8": "Call os.listdir() to find all the <span style=\"\">files</span> in the working directory and remove any non-PDF <span style=\"\">files</span>.",
	"project:combining-select-pages-from-many-pdfs_key9": "Call <span style=\"\">Python</span>’s sort() list method to alphabetize the <span style=\"\">file</span>names.",
	"project:combining-select-pages-from-many-pdfs_key10": "Create a Pdf<span style=\"\">File</span>Writer object for the <span style=\"\">output</span> PDF.",
	"project:combining-select-pages-from-many-pdfs_key11": "<span style=\"\">Loop</span> over each PDF <span style=\"\">file</span>, creating a Pdf<span style=\"\">File</span>Reader object for it.",
	"project:combining-select-pages-from-many-pdfs_key12": "<span style=\"\">Loop</span> over each page (except the first) in each PDF <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key13": "Add the pages to the <span style=\"\">output</span> PDF.",
	"project:combining-select-pages-from-many-pdfs_key14": "Write the <span style=\"\">output</span> PDF to a <span style=\"\">file</span> named allminutes.pdf.",
	"project:combining-select-pages-from-many-pdfs_key15": "For this project, open a new <span style=\"\">file</span> <span style=\"\">editor</span> window and <span style=\"\">save</span> it as combinePdfs.py.",
	"project:combining-select-pages-from-many-pdfs_key16": "Step 1: Find All PDF <span style=\"\">Files</span>",
	"project:combining-select-pages-from-many-pdfs_key17": "First, your program needs to get a list of all <span style=\"\">files</span> with the .pdf extension in the current working directory and sort them. Make your <span style=\"\">code</span> look like the following:",
	"project:combining-select-pages-from-many-pdfs_key18": "#! <span style=\"\">python3</span>",
	"project:combining-select-pages-from-many-pdfs_key19": "combinePdfs.py - Combines all the PDFs in the current working directory into",
	"project:combining-select-pages-from-many-pdfs_key20": "into a single PDF.",
	"project:combining-select-pages-from-many-pdfs_key21": "❶ import PyPDF2, os",
	"project:combining-select-pages-from-many-pdfs_key22": "Get all the PDF <span style=\"\">file</span>names.",
	"project:combining-select-pages-from-many-pdfs_key23": "pdf<span style=\"\">Files</span> = []<br>   for <span style=\"\">file</span>name in os.listdir('.'):<br>       if <span style=\"\">file</span>name.endswith('.pdf'):<br>❷         pdf<span style=\"\">Files</span>.append(<span style=\"\">file</span>name)<br>❸ pdf<span style=\"\">Files</span>.sort(<span style=\"\">key</span>=str.lower)",
	"project:combining-select-pages-from-many-pdfs_key24": "❹ pdfWriter = PyPDF2.Pdf<span style=\"\">File</span>Writer()",
	"project:combining-select-pages-from-many-pdfs_key25": "TODO: <span style=\"\">Loop</span> through all the PDF <span style=\"\">files</span>.",
	"project:combining-select-pages-from-many-pdfs_key26": "TODO: <span style=\"\">Loop</span> through all the pages (except the first) and add them.",
	"project:combining-select-pages-from-many-pdfs_key27": "TODO: <span style=\"\">Save</span> the resulting PDF to a <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key28": "After the shebang line and the descriptive comment about what the program does, this <span style=\"\">code</span> imports the os and PyPDF2 modules ❶. The os.listdir('.') call will return a list of every <span style=\"\">file</span> in the current working directory. The <span style=\"\">code</span> <span style=\"\">loops</span> over this list and adds only those <span style=\"\">files</span> with the .pdf extension to pdf<span style=\"\">Files</span> ❷. Afterward, this list is sorted in alphabetical order with the <span style=\"\">key</span>=str.lower <span style=\"\">key</span>word argument to sort() ❸.",
	"project:combining-select-pages-from-many-pdfs_key29": "A Pdf<span style=\"\">File</span>Writer object is created to hold the combined PDF pages ❹. Finally, a few comments outline the rest of the program.",
	"project:combining-select-pages-from-many-pdfs_key30": "Step 2: Open Each PDF",
	"project:combining-select-pages-from-many-pdfs_key31": "Now the program must read each PDF <span style=\"\">file</span> in pdf<span style=\"\">Files</span>. Add the following to your program:",
	"project:combining-select-pages-from-many-pdfs_key32": "#! <span style=\"\">python3</span>",
	"project:combining-select-pages-from-many-pdfs_key33": "combinePdfs.py - Combines all the PDFs in the current working directory into",
	"project:combining-select-pages-from-many-pdfs_key34": "a single PDF.",
	"project:combining-select-pages-from-many-pdfs_key35": "import PyPDF2, os",
	"project:combining-select-pages-from-many-pdfs_key36": "Get all the PDF <span style=\"\">file</span>names.",
	"project:combining-select-pages-from-many-pdfs_key37": "pdf<span style=\"\">Files</span> = []<br>--snip--",
	"project:combining-select-pages-from-many-pdfs_key38": "# TODO: Loop through all the pages (except the first) and add them.",
	"project:combining-select-pages-from-many-pdfs_key39": "TODO: <span style=\"\">Save</span> the resulting PDF to a <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key40": "For each PDF, the <span style=\"\">loop</span> opens a <span style=\"\">file</span>name in read-binary mode by calling open() with 'rb' as the second argument. The open() call returns a <span style=\"\">File</span> object, which gets passed to PyPDF2.Pdf<span style=\"\">File</span>Reader() to create a Pdf<span style=\"\">File</span>Reader object for that PDF <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key41": "Step 3: Add Each Page",
	"project:combining-select-pages-from-many-pdfs_key42": "For each PDF, you’ll want to <span style=\"\">loop</span> over every page except the first. Add this <span style=\"\">code</span> to your program:",
	"project:combining-select-pages-from-many-pdfs_key43": "#! <span style=\"\">python3</span>",
	"project:combining-select-pages-from-many-pdfs_key44": "combinePdfs.py - Combines all the PDFs in the current working directory into",
	"project:combining-select-pages-from-many-pdfs_key45": "a single PDF.",
	"project:combining-select-pages-from-many-pdfs_key46": "import PyPDF2, os",
	"project:combining-select-pages-from-many-pdfs_key47": "--snip--",
	"project:combining-select-pages-from-many-pdfs_key48": "<span style=\"\">Loop</span> through all the PDF <span style=\"\">files</span>.",
	"project:combining-select-pages-from-many-pdfs_key49": "for <span style=\"\">file</span>name in pdf<span style=\"\">Files</span>:<br>   --snip--",
	"project:combining-select-pages-from-many-pdfs_key50": "TODO: <span style=\"\">Save</span> the resulting PDF to a <span style=\"\">file</span>.",
	"project:combining-select-pages-from-many-pdfs_key51": "The <span style=\"\">code</span> inside the for <span style=\"\">loop</span> copies each Page object individually to the Pdf<span style=\"\">File</span>Writer object. Remember, you want to skip the first page. Since PyPDF2 considers 0 to be the first page, your <span style=\"\">loop</span> should start at 1 ❶ and then go up to, but not include, the <span style=\"\">integer</span> in pdfReader.numPages.",
	"project:combining-select-pages-from-many-pdfs_key52": "Step 4: <span style=\"\">Save</span> the Results",
	"project:combining-select-pages-from-many-pdfs_key53": "After these nested for <span style=\"\">loops</span> are done <span style=\"\">loop</span>ing, the pdfWriter <span style=\"\">variable</span> will contain a Pdf<span style=\"\">File</span>Writer object with the pages for all the PDFs combined. The last step is to write this content to a <span style=\"\">file</span> on the hard drive. Add this <span style=\"\">code</span> to your program:",
	"project:combining-select-pages-from-many-pdfs_key54": "<h1 id=\"spanstylepython3span\">! <span style=\"\">python3</span></h1>",
	"project:combining-select-pages-from-many-pdfs_key55": "combinePdfs.py - Combines all the PDFs in the current working directory into",
	"project:combining-select-pages-from-many-pdfs_key56": "a single PDF.",
	"project:combining-select-pages-from-many-pdfs_key57": "import PyPDF2, os",
	"project:combining-select-pages-from-many-pdfs_key58": "--snip--",
	"project:combining-select-pages-from-many-pdfs_key59": "<span style=\"\">Loop</span> through all the PDF <span style=\"\">files</span>.",
	"project:combining-select-pages-from-many-pdfs_key60": "for <span style=\"\">file</span>name in pdf<span style=\"\">Files</span>:<br>--snip--<br>    # <span style=\"\">Loop</span> through all the pages (except the first) and add them.<br>    for pageNum in range(1, pdfReader.numPages):<br>    --snip--",
	"project:combining-select-pages-from-many-pdfs_key61": "Passing 'wb' to open() opens the <span style=\"\">output</span> PDF <span style=\"\">file</span>, allminutes.pdf, in write-binary mode. Then, passing the resulting <span style=\"\">File</span> object to the write() method creates the actual PDF <span style=\"\">file</span>. A call to the close() method finishes the program.",
	"project:combining-select-pages-from-many-pdfs_key62": "Ideas for Similar Programs",
	"project:combining-select-pages-from-many-pdfs_key63": "Being able to create PDFs from the pages of other PDFs will let you make programs that can do the following:",
	"project:combining-select-pages-from-many-pdfs_key64": "Cut out specific pages from PDFs.",
	"project:combining-select-pages-from-many-pdfs_key65": "Reorder pages in a PDF.",
	"project:combining-select-pages-from-many-pdfs_key66": "Create a PDF from only those pages that have some specific text, identified by extractText()."
}