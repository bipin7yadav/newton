[
  {
    "component": "text",
    "value": "looping_key1"
  },
  {
    "component": "text",
    "value": "looping_key2"
  },
  {
    "component": "header",
    "variant": 2,
    "value": "looping_key3"
  },
  {
    "component": "text",
    "value": "looping_key4"
  },
  {
    "component": "text",
    "value": "looping_key5",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "text",
    "value": "looping_key6",
    "decoration": {
      "type": "bullet"
    }
  },
  {
    "component": "header",
    "variant": 2,
    "value": "looping_key7"
  },
  {
    "component": "youtube",
    "value": "https://www.youtube.com/watch?v=SZGo7oa8vsc"
  },
  {
    "component": "header",
    "variant": 2,
    "value": "looping_key8"
  },
  {
    "component": "text",
    "value": "looping_key9"
  },
  {
    "component": "code",
    "type": "python",
    "title": "",
    "value": "def hangman(secret_word):<br>    '''<br>    secret_word: string, the secret word to guess.<br><br>    Hangman game yeh start karta hai:<br><br>    * Game ki shuruaat mei hi, user ko bata dete hai ki<br>      secret_word mei kitne letters hai<br><br>    * Har round mei user se ek letter guess karne ko bolte hai<br><br>    * Har guess ke baad user ko feedback do ki woh guess uss<br>      word mei hai ya nahi<br><br>    * Har round ke baar, user ko uska guess kiya hua partial word<br>      display karo, aur underscore use kar kar woh letters bhi dikhao<br>      jo user ne abhi tak guess nahi kiye hai<br><br>    '''<br>    print \"Welcome to the game, Hangman!\"<br>    print \"I am thinking of a word that is \" + str(len(secret_word)) + \" letters long.\"<br>    print \"\"<br><br>    letters_guessed = []<br>    <br>    while (True):<br>        available_letters = get_available_letters(letters_guessed)<br>        print \"Available letters: \" + available_letters<br><br>        guess = raw_input(\"Please guess a letter: \")<br>        letter = guess.lower()<br><br>        if letter in secret_word:<br>            letters_guessed.append(letter)<br>            print \"Good guess: \" + get_guessed_word(secret_word, letters_guessed)<br>            print \"\"<br><br>            if is_word_guessed(secret_word, letters_guessed) == True:<br>                print \" * * Congratulations, you won! * * \"<br>                print \"\"<br>                break<br><br>        else:<br>            print \"Oops! That letter is not in my word: \" + get_guessed_word(secret_word, letters_guessed)<br>            letters_guessed.append(letter)<br>            print \"\""
  },
  {
    "component": "text",
    "value": "looping_key10"
  }
]